apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: "sock-shop-ingress"
  namespace: "sock-shop"
  annotations:
  # Core Ingress Settings  
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
# SSL Setting - 1
    ## SSL Settings
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}, {"HTTP":80}]'
    # alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:183066416469:certificate/044897ef-1b4e-4b39-be9b-2b9876118b28
    #alb.ingress.kubernetes.io/ssl-policy: ELBSecurityPolicy-TLS-1-1-2017-01 #Optional (Picks default if not used)
    # # SSL Redirect Setting
    # alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    # External-dns specific configuration for creating route53 record-set
    external-dns.alpha.kubernetes.io/hostname: sock-shop.philemonnwanne.me # give your domain name here
  labels:
    app: sock-shop-ingress
# SSL Setting - 2
spec:
  rules:
  - host: sock-shop.philemonnwanne.me   # SSL Setting (Optional only if we are not using certificate-arn annotation)
  # - host: ssldemo.kubeoncloud.com    # SSL Setting (Optional only if we are not using certificate-arn annotation)
  # - host: sock-shop.{{ mydomain-name.me }}
  - http:
      paths:
      # - path: /* # SSL Redirect Setting
      #   pathType: Prefix
      #   backend:
      #     serviceName: ssl-redirect
      #     servicePort: use-annotation   
      - path: /
        pathType: Prefix
        backend:
          service:
            name: front-end
            port:
              number: 80
              
# Important Note-1: In path based routing order is very important, if we are going to use  "/*", try to use it at the end of all rules.         

# TODO Implementation
  # - host: null-app.{{ mydomain-name.me }}
  #   http:
  #     paths:
  #     - path: /null-whatever-end-it-is-end
  #       backend:
  #         service:
  #           name: null-front-end
  #           port:
  #             number: 3000
